const { Telegraf } = require('telegraf');
const fetch = require('node-fetch');
const fs = require('fs');
const path = require('path');

// Bot setup (ржмржЯ ржЯрзЛржХрзЗржи ржмрж╛ржж)
const bot = new Telegraf('7843270119:AAHBy3sqDLiR-uek9aCbr7DPnYBQuvVSywg');

// Forced Subscription ржЪрзНржпрж╛ржирзЗрж▓ ржЖржЗржбрж┐
const requiredChannel = '@RM_Movie_Flix';

// ржлрж╛ржЗрж▓ рж╕рзНржЯрзЛрж░рзЗржЬ ржПржмржВ рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ, ржнрзЛржЯ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛рж░ ржЬржирзНржп ржбрж╛ржЯрж╛ржмрзЗрж╕
const requests = [];
const votes = {};
const fileStore = {};

// Forced Subscription ржЪрзЗржХ ржХрж░рж╛рж░ ржлрж╛ржВрж╢ржи
async function checkSubscription(ctx) {
  try {
    const userStatus = await ctx.telegram.getChatMember(requiredChannel, ctx.from.id);
    return userStatus.status === 'member' || userStatus.status === 'administrator' || userStatus.status === 'creator';
  } catch (error) {
    console.error('Subscription check error:', error);
    return false;
  }
}

// `/start` ржХржорж╛ржирзНржб - Forced Subscription ржПржмржВ рж╕рзНржмрж╛ржЧрждржо ржмрж╛рж░рзНрждрж╛
bot.start(async (ctx) => {
  const isSubscribed = await checkSubscription(ctx);

  if (!isSubscribed) {
    return ctx.reply(
      `ЁЯЫС ржжрзБржГржЦрж┐ржд, ржЖржкржирж┐ ржмржЯржЯрж┐ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп *${requiredChannel}* ржЪрзНржпрж╛ржирзЗрж▓рзЗ рж╕рж╛ржмрж╕рзНржХрзНрж░рж╛ржЗржм ржХрж░рждрзЗ рж╣ржмрзЗред`,
      {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'ржЪрзНржпрж╛ржирзЗрж▓рзЗ ржпрзЛржЧ ржжрж┐ржи', url: `https://t.me/${requiredChannel}` }],
            [{ text: 'рж╕рж╛ржмрж╕рзНржХрзНрж░рж┐ржкрж╢ржи ржЪрзЗржХ ржХрж░рзБржи', callback_data: 'checkSubscription' }]
          ]
        }
      }
    );
  }

  const welcomeMessage = `
ЁЯОм *рж╕рзНржмрж╛ржЧрждржо*, ${ctx.from.first_name}! ЁЯОЙ
    
ржПржЗ ржмржЯрзЗрж░ рж╕рж╛рж╣рж╛ржпрзНржпрзЗ ржЖржкржирж┐ ржорзБржнрж┐ рж░рж┐ржХрзЛржпрж╝рзЗрж╕рзНржЯ, ржорзБржнрж┐ рждржерзНржп, ржнрзЛржЯрж┐ржВ ржПржмржВ ржЖрж░ржУ ржЕржирзЗржХ ржХрж┐ржЫрзБ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред

тЪЩя╕П *ржлрж┐ржЪрж╛рж░ рждрж╛рж▓рж┐ржХрж╛*:
- /movie <ржорзБржнрж┐рж░ ржирж╛ржо> - ржорзБржнрж┐рж░ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд рждржерзНржп ржжрзЗржЦрзБржиред
- /request <ржорзБржнрж┐рж░ ржирж╛ржо> - ржирждрзБржи ржорзБржнрж┐ ржЕржирзБрж░рзЛржз ржХрж░рзБржиред
- /vote <ржорзБржнрж┐рж░ ржирж╛ржо> - ржнрзЛржЯ ржжрж┐ржиред
- /toprequests - рж╕рж░рзНржмрж╛ржзрж┐ржХ ржЕржирзБрж░рзЛржзржХрзГржд ржорзБржнрж┐рж░ рждрж╛рж▓рж┐ржХрж╛ред
- /topvotes - рж╕рж░рзНржмрж╛ржзрж┐ржХ ржнрзЛржЯржкрзНрж░рж╛ржкрзНржд ржорзБржнрж┐рж░ рждрж╛рж▓рж┐ржХрж╛ред
- /cancel - ржорзБржнрж┐ ржЕржирзБрж░рзЛржз ржмрж╛рждрж┐рж▓ред
- /filestore <ржлрж╛ржЗрж▓ ржирж╛ржо> - ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб ржПржмржВ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзБржиред

ЁЯЫа *рж╕рж╣рж╛ржпрж╝ржХ рж▓рж┐ржВржХ*:
`;

  // рж╕рж╣рж╛ржпрж╝ржХ ржХрзАржмрзЛрж░рзНржб
  const keyboard = {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'ЁЯУЬ ржЖржорж╛ржжрзЗрж░ рж░рзБрж▓рж╕ ржкржбрж╝рзБржи', url: 'https://example.com/rules' },
          { text: 'ЁЯМЯ ржлрж┐ржЪрж╛рж░ ржЧрж╛ржЗржб', url: 'https://example.com/features' }
        ],
        [
          { text: 'ЁЯЖШ рж╕рж╛рж╣рж╛ржпрзНржп', callback_data: 'help' },
          { text: 'ЁЯУз ржПржбржорж┐ржирзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ', url: 'https://t.me/admin_contact' }
        ]
      ]
    }
  };

  ctx.replyWithMarkdown(welcomeMessage, keyboard);
});

// `/checkSubscription` ржХрж▓ржмрзНржпрж╛ржХ
bot.action('checkSubscription', async (ctx) => {
  const isSubscribed = await checkSubscription(ctx);
  if (isSubscribed) {
    ctx.reply('тЬЕ рж╕рж╛ржмрж╕рзНржХрзНрж░рж┐ржкрж╢ржи рж╕ржлрж▓ рж╣ржпрж╝рзЗржЫрзЗ! ржПржЦржи ржЖржкржирж┐ ржмржЯржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред');
  } else {
    ctx.reply('тЪая╕П ржЖржкржирж┐ ржПржЦржирзЛ рж╕рж╛ржмрж╕рзНржХрзНрж░рж╛ржЗржм ржХрж░рзЗржиржирж┐ред');
  }
});

// `/movie` ржХржорж╛ржирзНржб - IMDb API ржЫрж╛ржбрж╝рж╛ ржорзБржнрж┐рж░ рждржерзНржп рж╕ржВржЧрзНрж░рж╣
async function fetchMovieDetailsWithoutAPI(title) {
  const url = `https://www.google.com/search?q=${encodeURIComponent(title)}+movie+details`;
  const response = await fetch(url);
  const html = await response.text();

  return {
    title: title,
    year: "N/A",
    rating: "N/A",
    plot: "ржПржЗ ржорзБржнрж┐рж░ ржкрзНрж▓ржЯ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред"
  };
}

bot.command('movie', async (ctx) => {
  const title = ctx.message.text.split(' ').slice(1).join(' ');
  if (!title) return ctx.reply('тЪая╕П ржжржпрж╝рж╛ ржХрж░рзЗ /movie ржХржорж╛ржирзНржбрзЗрж░ ржкрж░рзЗ ржорзБржнрж┐рж░ ржирж╛ржо ржжрж┐ржиред');

  const movie = await fetchMovieDetailsWithoutAPI(title);
  ctx.reply(
    `ЁЯОе *${movie.title}*\nтнР рж░рзЗржЯрж┐ржВ: ${movie.rating}\nЁЯУЕ ржорзБржХрзНрждрж┐: ${movie.year}\nЁЯУЦ ржкрзНрж▓ржЯ: ${movie.plot}`, 
    { parse_mode: 'Markdown' }
  );
});

// `/request` ржХржорж╛ржирзНржб - ржорзБржнрж┐ ржЕржирзБрж░рзЛржз
const adminId = 'YOUR_ADMIN_USER_ID'; // ржЕрзНржпрж╛ржбржорж┐ржи ржЖржЗржбрж┐

bot.command('request', async (ctx) => {
  const title = ctx.message.text.split(' ').slice(1).join(' ');
  if (!title) return ctx.reply('тЪая╕П ржжржпрж╝рж╛ ржХрж░рзЗ /request ржХржорж╛ржирзНржбрзЗрж░ ржкрж░рзЗ ржорзБржнрж┐рж░ рж╢рж┐рж░рзЛржирж╛ржо ржжрж┐ржиред');

  requests.push(title);
  await ctx.telegram.sendMessage(adminId, `ЁЯУй ржирждрзБржи ржорзБржнрж┐ ржЕржирзБрж░рзЛржз:\n\nржЗржЙржЬрж╛рж░: ${ctx.from.first_name}\nржЕржирзБрж░рзЛржз: ${title}`);
  ctx.reply(`тЬЕ ржорзБржнрж┐ ржЕржирзБрж░рзЛржз ржЧрзГрж╣рзАржд рж╣ржпрж╝рзЗржЫрзЗ: *${title}*`, { parse_mode: 'Markdown' });
});

// `/vote` ржХржорж╛ржирзНржб - ржорзБржнрж┐рж░ ржЬржирзНржп ржнрзЛржЯ
bot.command('vote', (ctx) => {
  const movie = ctx.message.text.split(' ').slice(1).join(' ');
  if (!movie) return ctx.reply('тЪая╕П ржжржпрж╝рж╛ ржХрж░рзЗ /vote ржХржорж╛ржирзНржбрзЗрж░ ржкрж░рзЗ ржорзБржнрж┐рж░ ржирж╛ржо ржжрж┐ржиред');

  votes[movie] = (votes[movie] || 0) + 1;

  ctx.reply(`ЁЯСН *${movie}* ржПрж░ ржЬржирзНржп ржЖржкржирж╛рж░ ржнрзЛржЯ ржЧрзГрж╣рзАржд рж╣ржпрж╝рзЗржЫрзЗ! ржорзЛржЯ ржнрзЛржЯ: ${votes[movie]}`, { parse_mode: 'Markdown' });
});

// `/toprequests` ржХржорж╛ржирзНржб - рж╕рж░рзНржмрж╛ржзрж┐ржХ ржЕржирзБрж░рзЛржзржХрзГржд ржорзБржнрж┐рж░ рждрж╛рж▓рж┐ржХрж╛
bot.command('toprequests', (ctx) => {
  if (requests.length === 0) return ctx.reply('тЪая╕П ржПржЦржи ржкрж░рзНржпржирзНржд ржХрзЛржирзЛ ржорзБржнрж┐ ржЕржирзБрж░рзЛржз ржирзЗржЗред');

  let message = 'ЁЯУК рж╕рж░рзНржмрж╛ржзрж┐ржХ ржЕржирзБрж░рзЛржзржХрзГржд ржорзБржнрж┐рж░ рждрж╛рж▓рж┐ржХрж╛:\n\n';
  const requestCount = {};

  requests.forEach((title) => {
    requestCount[title] = (requestCount[title] || 0) + 1;
  });

  Object.entries(requestCount).sort((a, b) => b[1] - a[1]).forEach(([title, count]) => {
    message += `ЁЯОм *${title}* - ${count} ржЕржирзБрж░рзЛржз\n`;
  });

  ctx.reply(message, { parse_mode: 'Markdown' });
});

// `/topvotes` ржХржорж╛ржирзНржб - рж╕рж░рзНржмрж╛ржзрж┐ржХ ржнрзЛржЯржкрзНрж░рж╛ржкрзНржд ржорзБржнрж┐рж░ рждрж╛рж▓рж┐ржХрж╛
bot.command('topvotes', (ctx) => {
  if (Object.keys(votes).length === 0) return ctx.reply('тЪая╕П ржПржЦржи ржкрж░рзНржпржирзНржд ржХрзЛржирзЛ ржорзБржнрж┐ ржнрзЛржЯ ржирзЗржЗред');

  let message = 'ЁЯПЖ рж╕рж░рзНржмрж╛ржзрж┐ржХ ржнрзЛржЯржкрзНрж░рж╛ржкрзНржд ржорзБржнрж┐рж░ рждрж╛рж▓рж┐ржХрж╛:\n\n';
  Object.entries(votes).sort((a, b) => b[1] - a[1]).forEach(([movie, count]) => {
    message += `ЁЯОм *${movie}* - ${count} ржнрзЛржЯ\n`;
  });

  ctx.reply(message, { parse_mode: 'Markdown' });
});

// `/cancel` ржХржорж╛ржирзНржб - ржорзБржнрж┐ ржЕржирзБрж░рзЛржз ржмрж╛рждрж┐рж▓
bot.command('cancel', (ctx) => {
  requests.pop();
  ctx.reply('тЭМ рж╢рзЗрж╖ ржорзБржнрж┐ ржЕржирзБрж░рзЛржз ржмрж╛рждрж┐рж▓ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред');
});

// `/filestore` ржХржорж╛ржирзНржб - ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб ржПржмржВ рж╕ржВрж░ржХрзНрж╖ржг
bot.command('filestore', (ctx) => {
  const fileName = ctx.message.text.split(' ').slice(1).join(' ');
  if (!fileName) return ctx.reply('тЪая╕П ржжржпрж╝рж╛ ржХрж░рзЗ /filestore ржХржорж╛ржирзНржбрзЗрж░ ржкрж░рзЗ ржлрж╛ржЗрж▓рзЗрж░ ржирж╛ржо ржжрж┐ржиред');

  fileStore[fileName] = { uploadedBy: ctx.from.id, date: new Date().toLocaleString() };
  ctx.reply(`тЬЕ *${fileName}* ржлрж╛ржЗрж▓ рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕ржВрж░ржХрзНрж╖рж┐ржд рж╣ржпрж╝рзЗржЫрзЗред`, { parse_mode: 'Markdown' });
});

// ржмржЯ ржЪрж╛рж▓рзБ
bot.launch().then(() => {
  console.log('тЬЕ ржмржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЪрж╛рж▓рзБ рж╣ржпрж╝рзЗржЫрзЗ!');
});
